// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: complex.proto

package example.complex;

public final class ComplexOuterClass {
  private ComplexOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DummyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:example.complex.Dummy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code example.complex.Dummy}
   */
  public static final class Dummy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:example.complex.Dummy)
      DummyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Dummy.newBuilder() to construct.
    private Dummy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Dummy() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Dummy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Dummy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return example.complex.ComplexOuterClass.internal_static_example_complex_Dummy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return example.complex.ComplexOuterClass.internal_static_example_complex_Dummy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              example.complex.ComplexOuterClass.Dummy.class, example.complex.ComplexOuterClass.Dummy.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof example.complex.ComplexOuterClass.Dummy)) {
        return super.equals(obj);
      }
      example.complex.ComplexOuterClass.Dummy other = (example.complex.ComplexOuterClass.Dummy) obj;

      if (getId()
          != other.getId()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static example.complex.ComplexOuterClass.Dummy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static example.complex.ComplexOuterClass.Dummy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static example.complex.ComplexOuterClass.Dummy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static example.complex.ComplexOuterClass.Dummy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static example.complex.ComplexOuterClass.Dummy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static example.complex.ComplexOuterClass.Dummy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static example.complex.ComplexOuterClass.Dummy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static example.complex.ComplexOuterClass.Dummy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static example.complex.ComplexOuterClass.Dummy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static example.complex.ComplexOuterClass.Dummy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static example.complex.ComplexOuterClass.Dummy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static example.complex.ComplexOuterClass.Dummy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(example.complex.ComplexOuterClass.Dummy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code example.complex.Dummy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:example.complex.Dummy)
        example.complex.ComplexOuterClass.DummyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return example.complex.ComplexOuterClass.internal_static_example_complex_Dummy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return example.complex.ComplexOuterClass.internal_static_example_complex_Dummy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                example.complex.ComplexOuterClass.Dummy.class, example.complex.ComplexOuterClass.Dummy.Builder.class);
      }

      // Construct using example.complex.ComplexOuterClass.Dummy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        name_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return example.complex.ComplexOuterClass.internal_static_example_complex_Dummy_descriptor;
      }

      @java.lang.Override
      public example.complex.ComplexOuterClass.Dummy getDefaultInstanceForType() {
        return example.complex.ComplexOuterClass.Dummy.getDefaultInstance();
      }

      @java.lang.Override
      public example.complex.ComplexOuterClass.Dummy build() {
        example.complex.ComplexOuterClass.Dummy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public example.complex.ComplexOuterClass.Dummy buildPartial() {
        example.complex.ComplexOuterClass.Dummy result = new example.complex.ComplexOuterClass.Dummy(this);
        result.id_ = id_;
        result.name_ = name_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof example.complex.ComplexOuterClass.Dummy) {
          return mergeFrom((example.complex.ComplexOuterClass.Dummy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(example.complex.ComplexOuterClass.Dummy other) {
        if (other == example.complex.ComplexOuterClass.Dummy.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        example.complex.ComplexOuterClass.Dummy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (example.complex.ComplexOuterClass.Dummy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:example.complex.Dummy)
    }

    // @@protoc_insertion_point(class_scope:example.complex.Dummy)
    private static final example.complex.ComplexOuterClass.Dummy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new example.complex.ComplexOuterClass.Dummy();
    }

    public static example.complex.ComplexOuterClass.Dummy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Dummy>
        PARSER = new com.google.protobuf.AbstractParser<Dummy>() {
      @java.lang.Override
      public Dummy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Dummy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Dummy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Dummy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public example.complex.ComplexOuterClass.Dummy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ComplexOrBuilder extends
      // @@protoc_insertion_point(interface_extends:example.complex.Complex)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.example.complex.Dummy one_dummy = 1;</code>
     * @return Whether the oneDummy field is set.
     */
    boolean hasOneDummy();
    /**
     * <code>.example.complex.Dummy one_dummy = 1;</code>
     * @return The oneDummy.
     */
    example.complex.ComplexOuterClass.Dummy getOneDummy();
    /**
     * <code>.example.complex.Dummy one_dummy = 1;</code>
     */
    example.complex.ComplexOuterClass.DummyOrBuilder getOneDummyOrBuilder();

    /**
     * <code>repeated .example.complex.Dummy dummies = 2;</code>
     */
    java.util.List<example.complex.ComplexOuterClass.Dummy> 
        getDummiesList();
    /**
     * <code>repeated .example.complex.Dummy dummies = 2;</code>
     */
    example.complex.ComplexOuterClass.Dummy getDummies(int index);
    /**
     * <code>repeated .example.complex.Dummy dummies = 2;</code>
     */
    int getDummiesCount();
    /**
     * <code>repeated .example.complex.Dummy dummies = 2;</code>
     */
    java.util.List<? extends example.complex.ComplexOuterClass.DummyOrBuilder> 
        getDummiesOrBuilderList();
    /**
     * <code>repeated .example.complex.Dummy dummies = 2;</code>
     */
    example.complex.ComplexOuterClass.DummyOrBuilder getDummiesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code example.complex.Complex}
   */
  public static final class Complex extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:example.complex.Complex)
      ComplexOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Complex.newBuilder() to construct.
    private Complex(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Complex() {
      dummies_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Complex();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Complex(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              example.complex.ComplexOuterClass.Dummy.Builder subBuilder = null;
              if (oneDummy_ != null) {
                subBuilder = oneDummy_.toBuilder();
              }
              oneDummy_ = input.readMessage(example.complex.ComplexOuterClass.Dummy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(oneDummy_);
                oneDummy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dummies_ = new java.util.ArrayList<example.complex.ComplexOuterClass.Dummy>();
                mutable_bitField0_ |= 0x00000001;
              }
              dummies_.add(
                  input.readMessage(example.complex.ComplexOuterClass.Dummy.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dummies_ = java.util.Collections.unmodifiableList(dummies_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return example.complex.ComplexOuterClass.internal_static_example_complex_Complex_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return example.complex.ComplexOuterClass.internal_static_example_complex_Complex_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              example.complex.ComplexOuterClass.Complex.class, example.complex.ComplexOuterClass.Complex.Builder.class);
    }

    public static final int ONE_DUMMY_FIELD_NUMBER = 1;
    private example.complex.ComplexOuterClass.Dummy oneDummy_;
    /**
     * <code>.example.complex.Dummy one_dummy = 1;</code>
     * @return Whether the oneDummy field is set.
     */
    @java.lang.Override
    public boolean hasOneDummy() {
      return oneDummy_ != null;
    }
    /**
     * <code>.example.complex.Dummy one_dummy = 1;</code>
     * @return The oneDummy.
     */
    @java.lang.Override
    public example.complex.ComplexOuterClass.Dummy getOneDummy() {
      return oneDummy_ == null ? example.complex.ComplexOuterClass.Dummy.getDefaultInstance() : oneDummy_;
    }
    /**
     * <code>.example.complex.Dummy one_dummy = 1;</code>
     */
    @java.lang.Override
    public example.complex.ComplexOuterClass.DummyOrBuilder getOneDummyOrBuilder() {
      return getOneDummy();
    }

    public static final int DUMMIES_FIELD_NUMBER = 2;
    private java.util.List<example.complex.ComplexOuterClass.Dummy> dummies_;
    /**
     * <code>repeated .example.complex.Dummy dummies = 2;</code>
     */
    @java.lang.Override
    public java.util.List<example.complex.ComplexOuterClass.Dummy> getDummiesList() {
      return dummies_;
    }
    /**
     * <code>repeated .example.complex.Dummy dummies = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends example.complex.ComplexOuterClass.DummyOrBuilder> 
        getDummiesOrBuilderList() {
      return dummies_;
    }
    /**
     * <code>repeated .example.complex.Dummy dummies = 2;</code>
     */
    @java.lang.Override
    public int getDummiesCount() {
      return dummies_.size();
    }
    /**
     * <code>repeated .example.complex.Dummy dummies = 2;</code>
     */
    @java.lang.Override
    public example.complex.ComplexOuterClass.Dummy getDummies(int index) {
      return dummies_.get(index);
    }
    /**
     * <code>repeated .example.complex.Dummy dummies = 2;</code>
     */
    @java.lang.Override
    public example.complex.ComplexOuterClass.DummyOrBuilder getDummiesOrBuilder(
        int index) {
      return dummies_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (oneDummy_ != null) {
        output.writeMessage(1, getOneDummy());
      }
      for (int i = 0; i < dummies_.size(); i++) {
        output.writeMessage(2, dummies_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (oneDummy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getOneDummy());
      }
      for (int i = 0; i < dummies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, dummies_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof example.complex.ComplexOuterClass.Complex)) {
        return super.equals(obj);
      }
      example.complex.ComplexOuterClass.Complex other = (example.complex.ComplexOuterClass.Complex) obj;

      if (hasOneDummy() != other.hasOneDummy()) return false;
      if (hasOneDummy()) {
        if (!getOneDummy()
            .equals(other.getOneDummy())) return false;
      }
      if (!getDummiesList()
          .equals(other.getDummiesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOneDummy()) {
        hash = (37 * hash) + ONE_DUMMY_FIELD_NUMBER;
        hash = (53 * hash) + getOneDummy().hashCode();
      }
      if (getDummiesCount() > 0) {
        hash = (37 * hash) + DUMMIES_FIELD_NUMBER;
        hash = (53 * hash) + getDummiesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static example.complex.ComplexOuterClass.Complex parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static example.complex.ComplexOuterClass.Complex parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static example.complex.ComplexOuterClass.Complex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static example.complex.ComplexOuterClass.Complex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static example.complex.ComplexOuterClass.Complex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static example.complex.ComplexOuterClass.Complex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static example.complex.ComplexOuterClass.Complex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static example.complex.ComplexOuterClass.Complex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static example.complex.ComplexOuterClass.Complex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static example.complex.ComplexOuterClass.Complex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static example.complex.ComplexOuterClass.Complex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static example.complex.ComplexOuterClass.Complex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(example.complex.ComplexOuterClass.Complex prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code example.complex.Complex}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:example.complex.Complex)
        example.complex.ComplexOuterClass.ComplexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return example.complex.ComplexOuterClass.internal_static_example_complex_Complex_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return example.complex.ComplexOuterClass.internal_static_example_complex_Complex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                example.complex.ComplexOuterClass.Complex.class, example.complex.ComplexOuterClass.Complex.Builder.class);
      }

      // Construct using example.complex.ComplexOuterClass.Complex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDummiesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (oneDummyBuilder_ == null) {
          oneDummy_ = null;
        } else {
          oneDummy_ = null;
          oneDummyBuilder_ = null;
        }
        if (dummiesBuilder_ == null) {
          dummies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dummiesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return example.complex.ComplexOuterClass.internal_static_example_complex_Complex_descriptor;
      }

      @java.lang.Override
      public example.complex.ComplexOuterClass.Complex getDefaultInstanceForType() {
        return example.complex.ComplexOuterClass.Complex.getDefaultInstance();
      }

      @java.lang.Override
      public example.complex.ComplexOuterClass.Complex build() {
        example.complex.ComplexOuterClass.Complex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public example.complex.ComplexOuterClass.Complex buildPartial() {
        example.complex.ComplexOuterClass.Complex result = new example.complex.ComplexOuterClass.Complex(this);
        int from_bitField0_ = bitField0_;
        if (oneDummyBuilder_ == null) {
          result.oneDummy_ = oneDummy_;
        } else {
          result.oneDummy_ = oneDummyBuilder_.build();
        }
        if (dummiesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            dummies_ = java.util.Collections.unmodifiableList(dummies_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dummies_ = dummies_;
        } else {
          result.dummies_ = dummiesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof example.complex.ComplexOuterClass.Complex) {
          return mergeFrom((example.complex.ComplexOuterClass.Complex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(example.complex.ComplexOuterClass.Complex other) {
        if (other == example.complex.ComplexOuterClass.Complex.getDefaultInstance()) return this;
        if (other.hasOneDummy()) {
          mergeOneDummy(other.getOneDummy());
        }
        if (dummiesBuilder_ == null) {
          if (!other.dummies_.isEmpty()) {
            if (dummies_.isEmpty()) {
              dummies_ = other.dummies_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDummiesIsMutable();
              dummies_.addAll(other.dummies_);
            }
            onChanged();
          }
        } else {
          if (!other.dummies_.isEmpty()) {
            if (dummiesBuilder_.isEmpty()) {
              dummiesBuilder_.dispose();
              dummiesBuilder_ = null;
              dummies_ = other.dummies_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dummiesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDummiesFieldBuilder() : null;
            } else {
              dummiesBuilder_.addAllMessages(other.dummies_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        example.complex.ComplexOuterClass.Complex parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (example.complex.ComplexOuterClass.Complex) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private example.complex.ComplexOuterClass.Dummy oneDummy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          example.complex.ComplexOuterClass.Dummy, example.complex.ComplexOuterClass.Dummy.Builder, example.complex.ComplexOuterClass.DummyOrBuilder> oneDummyBuilder_;
      /**
       * <code>.example.complex.Dummy one_dummy = 1;</code>
       * @return Whether the oneDummy field is set.
       */
      public boolean hasOneDummy() {
        return oneDummyBuilder_ != null || oneDummy_ != null;
      }
      /**
       * <code>.example.complex.Dummy one_dummy = 1;</code>
       * @return The oneDummy.
       */
      public example.complex.ComplexOuterClass.Dummy getOneDummy() {
        if (oneDummyBuilder_ == null) {
          return oneDummy_ == null ? example.complex.ComplexOuterClass.Dummy.getDefaultInstance() : oneDummy_;
        } else {
          return oneDummyBuilder_.getMessage();
        }
      }
      /**
       * <code>.example.complex.Dummy one_dummy = 1;</code>
       */
      public Builder setOneDummy(example.complex.ComplexOuterClass.Dummy value) {
        if (oneDummyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneDummy_ = value;
          onChanged();
        } else {
          oneDummyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.example.complex.Dummy one_dummy = 1;</code>
       */
      public Builder setOneDummy(
          example.complex.ComplexOuterClass.Dummy.Builder builderForValue) {
        if (oneDummyBuilder_ == null) {
          oneDummy_ = builderForValue.build();
          onChanged();
        } else {
          oneDummyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.example.complex.Dummy one_dummy = 1;</code>
       */
      public Builder mergeOneDummy(example.complex.ComplexOuterClass.Dummy value) {
        if (oneDummyBuilder_ == null) {
          if (oneDummy_ != null) {
            oneDummy_ =
              example.complex.ComplexOuterClass.Dummy.newBuilder(oneDummy_).mergeFrom(value).buildPartial();
          } else {
            oneDummy_ = value;
          }
          onChanged();
        } else {
          oneDummyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.example.complex.Dummy one_dummy = 1;</code>
       */
      public Builder clearOneDummy() {
        if (oneDummyBuilder_ == null) {
          oneDummy_ = null;
          onChanged();
        } else {
          oneDummy_ = null;
          oneDummyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.example.complex.Dummy one_dummy = 1;</code>
       */
      public example.complex.ComplexOuterClass.Dummy.Builder getOneDummyBuilder() {
        
        onChanged();
        return getOneDummyFieldBuilder().getBuilder();
      }
      /**
       * <code>.example.complex.Dummy one_dummy = 1;</code>
       */
      public example.complex.ComplexOuterClass.DummyOrBuilder getOneDummyOrBuilder() {
        if (oneDummyBuilder_ != null) {
          return oneDummyBuilder_.getMessageOrBuilder();
        } else {
          return oneDummy_ == null ?
              example.complex.ComplexOuterClass.Dummy.getDefaultInstance() : oneDummy_;
        }
      }
      /**
       * <code>.example.complex.Dummy one_dummy = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          example.complex.ComplexOuterClass.Dummy, example.complex.ComplexOuterClass.Dummy.Builder, example.complex.ComplexOuterClass.DummyOrBuilder> 
          getOneDummyFieldBuilder() {
        if (oneDummyBuilder_ == null) {
          oneDummyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              example.complex.ComplexOuterClass.Dummy, example.complex.ComplexOuterClass.Dummy.Builder, example.complex.ComplexOuterClass.DummyOrBuilder>(
                  getOneDummy(),
                  getParentForChildren(),
                  isClean());
          oneDummy_ = null;
        }
        return oneDummyBuilder_;
      }

      private java.util.List<example.complex.ComplexOuterClass.Dummy> dummies_ =
        java.util.Collections.emptyList();
      private void ensureDummiesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dummies_ = new java.util.ArrayList<example.complex.ComplexOuterClass.Dummy>(dummies_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          example.complex.ComplexOuterClass.Dummy, example.complex.ComplexOuterClass.Dummy.Builder, example.complex.ComplexOuterClass.DummyOrBuilder> dummiesBuilder_;

      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public java.util.List<example.complex.ComplexOuterClass.Dummy> getDummiesList() {
        if (dummiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dummies_);
        } else {
          return dummiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public int getDummiesCount() {
        if (dummiesBuilder_ == null) {
          return dummies_.size();
        } else {
          return dummiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public example.complex.ComplexOuterClass.Dummy getDummies(int index) {
        if (dummiesBuilder_ == null) {
          return dummies_.get(index);
        } else {
          return dummiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public Builder setDummies(
          int index, example.complex.ComplexOuterClass.Dummy value) {
        if (dummiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDummiesIsMutable();
          dummies_.set(index, value);
          onChanged();
        } else {
          dummiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public Builder setDummies(
          int index, example.complex.ComplexOuterClass.Dummy.Builder builderForValue) {
        if (dummiesBuilder_ == null) {
          ensureDummiesIsMutable();
          dummies_.set(index, builderForValue.build());
          onChanged();
        } else {
          dummiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public Builder addDummies(example.complex.ComplexOuterClass.Dummy value) {
        if (dummiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDummiesIsMutable();
          dummies_.add(value);
          onChanged();
        } else {
          dummiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public Builder addDummies(
          int index, example.complex.ComplexOuterClass.Dummy value) {
        if (dummiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDummiesIsMutable();
          dummies_.add(index, value);
          onChanged();
        } else {
          dummiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public Builder addDummies(
          example.complex.ComplexOuterClass.Dummy.Builder builderForValue) {
        if (dummiesBuilder_ == null) {
          ensureDummiesIsMutable();
          dummies_.add(builderForValue.build());
          onChanged();
        } else {
          dummiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public Builder addDummies(
          int index, example.complex.ComplexOuterClass.Dummy.Builder builderForValue) {
        if (dummiesBuilder_ == null) {
          ensureDummiesIsMutable();
          dummies_.add(index, builderForValue.build());
          onChanged();
        } else {
          dummiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public Builder addAllDummies(
          java.lang.Iterable<? extends example.complex.ComplexOuterClass.Dummy> values) {
        if (dummiesBuilder_ == null) {
          ensureDummiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dummies_);
          onChanged();
        } else {
          dummiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public Builder clearDummies() {
        if (dummiesBuilder_ == null) {
          dummies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dummiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public Builder removeDummies(int index) {
        if (dummiesBuilder_ == null) {
          ensureDummiesIsMutable();
          dummies_.remove(index);
          onChanged();
        } else {
          dummiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public example.complex.ComplexOuterClass.Dummy.Builder getDummiesBuilder(
          int index) {
        return getDummiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public example.complex.ComplexOuterClass.DummyOrBuilder getDummiesOrBuilder(
          int index) {
        if (dummiesBuilder_ == null) {
          return dummies_.get(index);  } else {
          return dummiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public java.util.List<? extends example.complex.ComplexOuterClass.DummyOrBuilder> 
           getDummiesOrBuilderList() {
        if (dummiesBuilder_ != null) {
          return dummiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dummies_);
        }
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public example.complex.ComplexOuterClass.Dummy.Builder addDummiesBuilder() {
        return getDummiesFieldBuilder().addBuilder(
            example.complex.ComplexOuterClass.Dummy.getDefaultInstance());
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public example.complex.ComplexOuterClass.Dummy.Builder addDummiesBuilder(
          int index) {
        return getDummiesFieldBuilder().addBuilder(
            index, example.complex.ComplexOuterClass.Dummy.getDefaultInstance());
      }
      /**
       * <code>repeated .example.complex.Dummy dummies = 2;</code>
       */
      public java.util.List<example.complex.ComplexOuterClass.Dummy.Builder> 
           getDummiesBuilderList() {
        return getDummiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          example.complex.ComplexOuterClass.Dummy, example.complex.ComplexOuterClass.Dummy.Builder, example.complex.ComplexOuterClass.DummyOrBuilder> 
          getDummiesFieldBuilder() {
        if (dummiesBuilder_ == null) {
          dummiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              example.complex.ComplexOuterClass.Dummy, example.complex.ComplexOuterClass.Dummy.Builder, example.complex.ComplexOuterClass.DummyOrBuilder>(
                  dummies_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          dummies_ = null;
        }
        return dummiesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:example.complex.Complex)
    }

    // @@protoc_insertion_point(class_scope:example.complex.Complex)
    private static final example.complex.ComplexOuterClass.Complex DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new example.complex.ComplexOuterClass.Complex();
    }

    public static example.complex.ComplexOuterClass.Complex getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Complex>
        PARSER = new com.google.protobuf.AbstractParser<Complex>() {
      @java.lang.Override
      public Complex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Complex(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Complex> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Complex> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public example.complex.ComplexOuterClass.Complex getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_example_complex_Dummy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_example_complex_Dummy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_example_complex_Complex_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_example_complex_Complex_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rcomplex.proto\022\017example.complex\"!\n\005Dumm" +
      "y\022\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\"]\n\007Complex\022)" +
      "\n\tone_dummy\030\001 \001(\0132\026.example.complex.Dumm" +
      "y\022\'\n\007dummies\030\002 \003(\0132\026.example.complex.Dum" +
      "myb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_example_complex_Dummy_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_example_complex_Dummy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_example_complex_Dummy_descriptor,
        new java.lang.String[] { "Id", "Name", });
    internal_static_example_complex_Complex_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_example_complex_Complex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_example_complex_Complex_descriptor,
        new java.lang.String[] { "OneDummy", "Dummies", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
